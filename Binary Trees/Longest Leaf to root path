Given a binary tree, return the longest path from leaf to root. Longest means, a path which contain maximum number of nodes from leaf to root.
Input format :

Elements in level order form (separated by space)

(If any node does not have left or right child, take -1 in its place)

Line 1 : Binary Tree 1 (separated by space)

Sample Input 1 :
 5 6 10 2 3 -1 -1 -1 -1 -1 9 -1 -1
Sample Output 1 :
9
3
6
5
---------------------Solution-------------------/nabajyoti majumdar
vector<int>* longestPath(BinaryTreeNode<int>* root) {
	// Write your code here
    vector<int>* ans=new vector<int>();
    if(root==NULL){
        return ans;
    }
    vector<int>* leftAns=longestPath(root->left);
    vector<int>* rightAns=longestPath(root->right);
    if(leftAns->size()>=rightAns->size()){
        leftAns->push_back(root->data);
        return leftAns;
    }
    if(leftAns->size()<=rightAns->size()){
        rightAns->push_back(root->data);
        return rightAns;
    }

}
