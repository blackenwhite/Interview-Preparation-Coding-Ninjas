
    Asked in:  
    Google

Given an index k, return the kth row of the Pascal’s triangle.

Pascal’s triangle : To generate A[C] in row R, sum up A’[C] and A’[C-1] from previous row R - 1.

Example:

Input : k = 3

Return : [1,3,3,1]

    NOTE : k is 0 based. k = 0, corresponds to the row [1]. 

Note:Could you optimize your algorithm to use only O(k) extra space?

-----------------------Solution-------------------//nabajyoti majumdar
vector<int> Solution::getRow(int k) {
    if(k==0){
        vector<int>v;
        v.push_back(1);
        return v;
    }
    vector<int> v;
  v.assign(2,1);
  int count=1;
  vector<int> temp;
  while(count<k){

    /*for(int i=0;i<v.size();i++){
      cout<<v[i]<<" ";
    }
    cout<<endl;*/

    temp.push_back(1);
    for(int i=0;i<v.size()-1;i++){
      temp.push_back(v[i]+v[i+1]);

    }
    temp.push_back(1);
    v=temp;
    temp.clear();
    count++;
  }
  return v;
}
