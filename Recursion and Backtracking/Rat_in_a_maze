// C++ code
#include <bits/stdc++.h>
using namespace std;

bool hasPathhelper(int** arr,int n,int** visited,int x,int y){
  if(x==n-1 && y==n-1){
    return true;
  }
  if(x<=0 || y<=0 || x>=n || y>=n || arr[x][y]==0 || visited[x][y]==1){
    return false;
  }

  bool right=hasPathhelper(arr,n,visited,x,y+1);
  bool left=hasPathhelper(arr,n,visited,x,y-1);
  bool up=hasPathhelper(arr,n,visited,x-1,y);
  bool down=hasPathhelper(arr,n,visited,x+1,y);

  if(right || left||up||down) return true;
  visited[x][y]=0;
  return false;
}

bool hasPath(int** arr,int n){
  int** visited=new int*[n];
  for (int i=0;i<n;i++){
    for (int j=0;j<n;j++)
      visited[i][j];


  }
  return hasPathhelper(arr,n,visited,0,0);
}

int main(){
  int** arr;
  int n;
  cin>>n;
  arr=new int*[n];
  for (int i=0;i<n;i++){
    arr[i]=new int[n];
    for (int j=0;j<n;j++){
      cin>>arr[i][j];
    }
  }
  cout<<hasPath(arr,n)<<endl;
  for(int i=0;i<n;i++){
    delete [] arr[i];
  }
  delete arr;
}
