Given a string expression which consists only ‘}’ and ‘{‘. The expression may not be balanced. You need to find the minimum number of bracket reversals which are required to make the expression balanced.
Return -1 if the given expression can't be balanced.
Input Format :
String S
Output Format :
Required count
Sample Input 1 :
{{{
Sample Output 1 :
-1
Sample Input 2 :
{{{{}}
Sample Output 2 :
1
-----------------Solution-----------------
#include <bits/stdc++.h>
using namespace std;

int countBracketReversals(char input[]){
	// Write your code here
    if(strlen(input)%2==1) return -1;
    stack<char> s;
    for (int i=0;input[i]!='\0';i++){
        if(input[i]=='{') {
            s.push(input[i]);
            continue;
        }
        if(input[i]=='}'){
            if(s.empty()) s.push(input[i]);
            else{
                if(s.top()=='{') s.pop();
                else s.push(input[i]);
            }
        }
        
    }
    
    int count=0;
    char c1,c2;
    while(!s.empty()){
        c1=s.top();s.pop();
        c2=s.top();s.pop();
        if(c1==c2) count++;
        else count+=2;
    }
    return count;
    

}
