#include <queue>
using namespace std;

template <typename T>
class stack {
    // Complete this class
    public:
    queue<T> *q1;
    queue<T> *q2;
    
    stack(){
        q1=new queue<T>();
        q2=new queue<T>();
    }
    void push(T ele)
    {
        //If Stack is empty
        q1->push(ele);
        
    }
    T pop()
    {
        if (q1->size()==0)
            return 0;
        T ans;
        while(q1->size()>1){
            q2->push(q1->front());
            q1->pop();
        }
        ans=q1->front();
        q1->pop();
        while(!q2->empty())
        {
            q1->push(q2->front());
            q2->pop();
        }
        return ans;
    }
    T top()
    {
        if (q1->size()==0)
            return 0;
        T ans;
        while(q1->size()>1){
            q2->push(q1->front());
            q1->pop();
        }
        ans=q1->front();
        q2->push(q1->front());
        q1->pop();
        while(!q2->empty())
        {
            q1->push(q2->front());
            q2->pop();
        }
        return ans;
    }
    int getSize()
    {
        return q1->size()+q2->size();
    }
    
};
