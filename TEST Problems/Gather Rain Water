Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.
Please refer to Sample test case for more details.
Input format:
The first line of input contains size of the array, n.
The following line of input contains n space separated integers.
Output format:
The first and only line of output contains integer, in accordance to the task.
Constraints:
1 <= n <= 10000
Sample Input 1:
6
3 0 0 2 0 4
Sample Output 1:
10
Sample Input 2 :
5
90 70 20 80 50
Sample Output 2 :
70


Explanation for Sample Input 1 :
Refer to the image for better comprehension:
Alt Text
-------------------------------Solution-------------------
#include <bits/stdc++.h>
using namespace std;


int main() {
    /* Read input as specified in the question.
     * Print output as specified in the question.
     */
    int n;
    cin>>n;
    int* arr=new int[n];
    for (int i=0;i<n;i++){
        cin>>arr[i];
    }
    int* lefttoright=new int[n];
    int* righttoleft=new int[n];
    int maxValue=INT_MIN;
    int trapwater=0;
    if(n<=2) {
        cout<<0<<endl;
        return 0;
    }
    
    for (int i=0;i<n;i++){
        if(maxValue<arr[i]){
            maxValue=arr[i];
        }
        lefttoright[i]=maxValue;
    }
    maxValue=INT_MIN;
    
    for (int i=n-1;i>=0;i--){
        if(maxValue<arr[i]){
            maxValue=arr[i];
        }
        righttoleft[i]=maxValue;
    }
    for (int i=0;i<n;i++){
        trapwater+=min(lefttoright[i],righttoleft[i])-arr[i];
    }
    cout<<trapwater;
    return 0;
    
    
}
